# 📝 커밋 메시지 형식 규칙

## 🎯 필수 형식

### 기본 형식
```
YYYY-MM-DD 내용 설명
```

### 예시
```
2025-01-15 포인트 시스템 중복 입력 방지 로직 수정
2025-01-15 0-200 범위 검증 제거
2025-01-15 포인트 목록 최신순 정렬 적용
2025-01-15 포인트 무결성 검증 함수 추가
```

## 📋 커밋 메시지 작성 규칙

### 1. 날짜 형식
- **형식**: `YYYY-MM-DD`
- **예시**: `2025-01-15`
- **주의**: 하이픈(`-`) 사용, 슬래시(`/`) 금지

### 2. 내용 설명
- **한국어 사용**: 명확하고 간결하게
- **동사 활용**: 수정, 추가, 개선, 수정, 삭제 등
- **기능 중심**: 무엇을 했는지 명확하게

### 3. 커밋 타입별 예시

#### 🐛 버그 수정
```
2025-01-15 포인트 중복 입력 버그 수정
2025-01-15 로그인 오류 해결
```

#### ✨ 새로운 기능
```
2025-01-15 백업 시스템 기본 구조 추가
2025-01-15 포인트 히스토리 추적 기능 구현
```

#### 🎨 UI/UX 개선
```
2025-01-15 대시보드 레이아웃 개선
2025-01-15 모바일 반응형 디자인 적용
```

#### 🔧 백엔드 개선
```
2025-01-15 데이터베이스 쿼리 최적화
2025-01-15 API 응답 속도 개선
```

#### 📊 데이터 관련
```
2025-01-15 시드 데이터 업데이트
2025-01-15 데이터 마이그레이션 스크립트 추가
```

## 🚫 금지 사항

### ❌ 잘못된 형식
```
fix bug  # 날짜 없음
2025/01/15 수정  # 슬래시 사용
2025-1-15 버그수정  # 한자리 수
수정함  # 날짜와 내용 모두 부족
```

### ❌ 너무 긴 설명
```
2025-01-15 포인트 시스템에서 중복 입력을 방지하기 위해 기존 레코드가 있는지 확인하고 있으면 업데이트하고 없으면 새로 생성하는 로직을 수정했습니다
```

## ✅ 올바른 예시

### 간단한 수정
```
2025-01-15 포인트 입력 폼 검증 로직 수정
```

### 복합 작업
```
2025-01-15 포인트 시스템 전면 개선 - 중복 방지, 검증 제거, 정렬 개선
```

### 여러 파일 수정
```
2025-01-15 백업 시스템 구현 - JSON/Excel 백업, 스케줄링, 알림 기능
```

## 🔄 커밋 실행 순서

### 1. 변경사항 확인
```bash
git status
git diff
```

### 2. 스테이징
```bash
git add .
# 또는 특정 파일만
git add app.py templates/dashboard.html
```

### 3. 커밋 (날짜 형식 준수)
```bash
git commit -m "2025-01-15 포인트 시스템 버그 수정"
```

### 4. 푸시
```bash
git push origin main
```

## 💡 팁

1. **작업 시작 전**: 오늘 날짜 확인
2. **커밋 전**: 메시지 형식 재확인
3. **일관성**: 항상 같은 형식 유지
4. **명확성**: 나중에 봐도 이해할 수 있게

---


> 📅 **기억하세요**: 모든 커밋 메시지는 `YYYY-MM-DD 내용` 형식을 따라야 합니다!
description:
globs:
alwaysApply: true
---
